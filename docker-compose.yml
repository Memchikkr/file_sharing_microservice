version: '3'

networks:
  custom:
    driver: bridge

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: app
    env_file:
      - .env
    environment:
      MONGO_HOST: mongo
    volumes:
      - ./src:/app/src/
      - ./pyproject.toml:/app/pyproject.toml
    ports:
      - '8000:8000'
    depends_on:
      - mongo_db
      - minio
    command: bash -c "uvicorn ./src/file_sharing/main:app --host 0.0.0.0 --port 8000 --reload --ws-ping-interval 300 --ws-ping-timeout 300"
    networks:
      - custom

  mongo_db:
    image: mongo
    container_name: "mongo_db"
    ports:
      - "27017:27017"
    networks:
      - custom

  minio:
    image: minio/minio
    container_name: "minio_storage"
    volumes:
      - ./docker/minio/data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server --console-address ":9001" /data/
    networks:
      - custom
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  web:
    container_name: "web"
    image: nginx:alpine
    depends_on:
      - app
    ports:
      - "8080:8080"
    volumes:
      - ./nginx:/app/nginx
    networks:
      - custom
